//1

function isPal(string) {


    var stringOriginal = string.toLowerCase().replace(/\s+/g,'');
    var stringReverse = string.toLowerCase().split('').reverse().join('').replace(/\s+/g,'');

    return (stringOriginal === stringReverse);
}
console.log(isPal('А роза упала на лапу Азора'));

//2

var arr2 = ['воз', 'киборг', 'корсет', 'ЗОВ', 'гробик', 'костер', 'сектор'];
function anClean (arr) {
    var obj2 = {};
    var a = [];
    for (var i = 0; i < arr.length; i++) {
        var str2 = arr[i].toLowerCase().split('').sort().join('');
        obj2[str2] = arr[i];
    }
    for (var key in obj2) {
        a.push(obj2[key]);
    }
    console.log (a);
}
anClean(arr2);


//3

var arr3 = [ 'rrrA', 'toboR', 'ekiL', 'dooG', 'esoR' ];
function change(arr) {
    arr.reverse();
    for (var i = 0; i < arr.length; i++){
        arr[i] = arr[i].split('').reverse().join('');
    }
    console.log (arr);
}
change(arr3);


//4.1 - сумма ЦЕЛЫХ чисел с шагом 1 (условие задачи не точное)

function sumIntNumbers (x,y){
    var sum = 0;
    for (x; x < y; x++){
        if (x - Math.floor(x) === 0) {
            sum += x;
        }
    }
    return sum;
}
console.log(sumIntNumbers (1,100));

//4.2
function sumEvenNumbers (x1,y1) {
    var sum1 = 0;
    for (x1; x1 < y1; x1++){
        if (x1%2=== 0) {
            sum1 += x1;
        }
    }
    return sum1;
}
console.log(sumEvenNumbers (0,100));

//5.1 по простому

function callMe() {
        var yourNumber1 = prompt('Ведите число 1');
        var yourNumber2 = prompt('Ведите число 2');
        var yourNumber3 = prompt('Ведите число 3');
        if ((isNaN(yourNumber1)) || (isNaN(yourNumber2)) || (isNaN(yourNumber3))||
             (yourNumber1 === '')||(yourNumber2 === '')||(yourNumber3 === '') ||
            (yourNumber1 === null) || (yourNumber2 === null)|| (yourNumber3 === null)) {
            console.error("Ошибка! Нужно ввести 3 числа")
        }
        else {
            var sum5 = +yourNumber1 + +yourNumber2 + +yourNumber3;
        }
    console.log(sum5);
}
callMe();

//5.2 через функции

function callMe(quantity) {
    var arr = arrayForSum(quantity),
        sum = 0;
    for (var i = 0; i < arr.length; i++){
        if (isNumber(arr[i])){
            sum += +arr[i];
            if (i === arr.length - 1) {
                console.log('Сумма чисел: ' + sum);
            }
        } else {
            console.error ('Ошибка! Нужно ввести 3 числа');
            break;
        }
    }
}
function isNumber(num) {
    return !isNaN(parseFloat(num)) && isFinite(num);
}
function arrayForSum(quantity) {
    var arr = [];
    for (var i = 0; i < quantity; i++){
       arr[i] = prompt('Введите ' + (i+1) + 'е' + ' число');
    }
 return arr;
}
callMe(3);

//6

function callMeAgain (arr) {
   arr.sort(compareNumeric (arr));
    return (arr.join(',').split(' '));
}
function compareNumeric(a, b) {
    return a - b;
}
callMeAgain(['s','c','f','v','n','a','b','k','s']);

//7

var arr = [
    {name: "L1", age: 45},
    {name: "L1", age: 20},
    {name: "L1", age: 10},
    {name: "L1", age: 78},
    {name: "L1", age: 41},
    {name: "L1", age: 10}
];
function compareNumeric(a, b) {
    return a.age - b.age;
}
function sortArray() {
    arr.sort(compareNumeric);
    console.log(arr);
}
sortArray(arr);

//8

var arr = [
    {name: "L1", age: 45},
    {name: "L2", age: 20},
    {name: "L3", age: 10},
    {name: "L4", age: 78},
    {name: "L5", age: 41},
    {name: "L6", age: 10}
];
function compareNumeric(a, b) {
    return a.age - b.age;
}
function sortArray() {
    arr.sort(compareNumeric);
    return (arr);
}

function checkNewUserInList (newName) {
    var nameIsPresentInList = false;
    for (var i = 0; i < arr.length; i++) {
        if (newName === arr[i].name) {
            nameIsPresentInList = true;
        }
    }
    return nameIsPresentInList;
}
function addToArray() {
        var newName = prompt("Ведите имя пользователя"),
            newAge = +prompt("Ведите возраст пользователя");
        if (checkNewUserInList(newName)) {
            console.log('User already exist');
        } else {
            arr.push ({name: newName, age: newAge});
        }
        arr.sort (sortArray);
}
console.log(arr);
addToArray (arr);

//9.1 вариант через цикл

var array = [13, 35, 3, 443];

function countSymbols (array, sym) {
    var counter = 0;
    array = array.join('').split('');
    for (var i = 0; i < array.length; i++){
        if (+array[i] === sym) {
            counter++ ;
        }
    }
    console.log('В массиве ' + counter + ' цифры ' + sym);
}
countSymbols (array, 3);


//9.2

var array = [13, 35, 3, 443];
array = array.join('').split('');
var positiveArr = array.filter(function(number) {
    return (number == 3);
});

console.log('В массиве ' + positiveArr.length + ' цифры 3');


//10

var array = ['1', '2', '3', '4', '5', '6'];

function makeSymbols (array) {

    var makeArray = [];
    for (var i = 0; i < (array.length/2); i++) {
        makeArray.push(array[i] + array[array.length-i-1]);
    }
    return (makeArray.join('-'));
}
makeSymbols (array);

//11

var array1 = [1,2,3],
    array2 = [4,5,6,7];

function sumOfArrays(array1, array2) {
    var arraySum = [],
        max = array2,
        min = array1;
    if (array1.length > array2.length) {
        max = array1;
        min = array2;
    }
    for (var i = 0; i < max.length; i++) {
        if (!min [i]) {
            min [i] = 0;
        }
        arraySum.push(min[i] + max[i]);
    }
    return (arraySum);
}
sumOfArrays (array1, array2);

//12

var array = [1,2,3,4,3,3];

function arraysWithoutSym (array, sym) {
    for (var i = 0; i < array.length; i++) {
        if (array [i] === sym) {
            array.splice(i, 1);
        }
    }
    return (array);
}
arraysWithoutSym (array, 3);

//13

var array1 = [1, 2, 3],
    array2 = [101, 2, 1, 10],
    array3 = [2, 1];
function intersection (array1, array2, array3 ) {
    var array = [];
    for (var i = 0; i < array1.length; i++) {
        if (((array2.indexOf(array1[i])) !== -1) && ((array3.indexOf(array1[i])) !== -1)) {
            array.push(array1[i]);
        }
    }
        return (array);
}
intersection (array1, array2, array3);
